/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pack;

import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.IOException;
import java.io.PrintStream;
/**
 *
 * @author Jeremiah
 */
public class Window extends javax.swing.JFrame {
    
    private boolean isBlockMoving = false;
    private Component currentBlock = null;
    private int x;
    private int y;
    private int dx;
    private int dy;
    
    /**
     * Creates new form console
     */
    public Window() {
        initComponents();
        
        
        
        workspacePane.addMouseListener( new MouseAdapter()
                {
                   public void mouseExited(MouseEvent evt) {workspacePaneMouseExited(evt);}
                   public void mousePressed(MouseEvent evt) {workspacePaneMousePressed(evt);}
                   public void mouseReleased(MouseEvent evt) {workspacePaneMouseReleased(evt);}
                });
        workspacePane.addMouseMotionListener(new MouseMotionAdapter()
                {
                    public void mouseDragged(MouseEvent evt) {workspacePaneMouseDragged(evt);}
                });
    }
    
   
    
    private void workspacePaneMousePressed(MouseEvent evt)
    {
        currentBlock = workspacePane.getComponentAt(evt.getX(), evt.getY());
        if (currentBlock == null)
            return;
        if (currentBlock == workspacePane)
        {
            currentBlock = null;
            return;
        }
        
        isBlockMoving = true;
        currentBlock.setBackground(Color.LIGHT_GRAY);
        currentBlock.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        //blockPane.moveToFront(currentBlock);
        
        Point p = currentBlock.getLocation();
        dx = p.x - evt.getX();
        dy = p.y - evt.getY();
    }
    
    private void workspacePaneMouseDragged(MouseEvent evt)
    {
        if (isBlockMoving)
        {
            x = evt.getX();
            y = evt.getY();
            currentBlock.setLocation(x+dx, y+dy);
        }
    }
    
    private void workspacePaneMouseReleased(MouseEvent evt)
    {
        if (isBlockMoving)
        {
            currentBlock.setBackground(Color.WHITE);
            currentBlock.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            currentBlock = null;
            isBlockMoving = false;
        }
    }
    
    private void workspacePaneMouseExited(MouseEvent evt)
    {
        workspacePaneMouseReleased(evt);
    }

    Session se = new Session();
    
    private void setOuputStreams(){
        // Now create a new TextAreaOutputStream to write to our JTextArea control and wrap a
        // PrintStream around it to support the println/printf methods.
        PrintStream out = new PrintStream( new TextAreaOutputStream( consoleOutput ) );

        // redirect standard output stream to the TextAreaOutputStream
        System.setOut( out );
        // redirect standard error stream to the TextAreaOutputStream
        System.setErr( out );
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        workspacePane = new javax.swing.JPanel();
        addBlock1 = new pack.AddBlock();
        subtractBlock1 = new pack.SubtractBlock();
        multiplyBlock1 = new pack.MultiplyBlock();
        divideBlock1 = new pack.DivideBlock();
        modBlock1 = new pack.ModBlock();
        charBlock1 = new pack.CharBlock();
        boolBlock1 = new pack.BoolBlock();
        intBlock1 = new pack.IntBlock();
        stringBlock1 = new pack.StringBlock();
        equalBlock1 = new pack.EqualBlock();
        greaterThanBlock1 = new pack.GreaterThanBlock();
        lessThanBlock1 = new pack.LessThanBlock();
        notEqualBlock1 = new pack.NotEqualBlock();
        javaPane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        javaOutput = new javax.swing.JTextArea();
        controlToolbar = new javax.swing.JToolBar();
        compileButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        runButton = new javax.swing.JButton();
        consoleOutputPane = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        consoleOutput = new javax.swing.JTextArea();
        consoleInputPane = new javax.swing.JPanel();
        consoleInput = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jFile = new javax.swing.JMenu();
        jEdit = new javax.swing.JMenu();
        jHelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        workspacePane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Block Workspace", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        addBlock1.setToolTipText("");

        javax.swing.GroupLayout workspacePaneLayout = new javax.swing.GroupLayout(workspacePane);
        workspacePane.setLayout(workspacePaneLayout);
        workspacePaneLayout.setHorizontalGroup(
            workspacePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workspacePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(workspacePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subtractBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiplyBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(divideBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(charBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boolBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(intBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stringBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equalBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(greaterThanBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(workspacePaneLayout.createSequentialGroup()
                        .addComponent(lessThanBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(notEqualBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(295, Short.MAX_VALUE))
        );
        workspacePaneLayout.setVerticalGroup(
            workspacePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workspacePaneLayout.createSequentialGroup()
                .addComponent(addBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subtractBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(multiplyBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(divideBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(charBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boolBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(intBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stringBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(equalBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(greaterThanBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lessThanBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(workspacePaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(notEqualBlock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javaPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Java Code", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        javaOutput.setColumns(20);
        javaOutput.setRows(5);
        javaOutput.setText("/**At the moment, block-to-code translation is not yet \n * implemented, however, any Java code typed within this box \n * will compile and run, just keep the class and main lines \n * as they are, then press compile, wait for output, then run \n * if no errors ocurred. Keep in mind the Console Input is not\n * yet functional though, so anything requiring an input will\n * fail.\n**/\npublic class Session {\n\tpublic static void main(String[] args){\n\t\tString greeting = \"Hello World!\";\n\t\tSystem.out.println(greeting);\n\t}\n}");
        javaOutput.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(javaOutput);

        javax.swing.GroupLayout javaPaneLayout = new javax.swing.GroupLayout(javaPane);
        javaPane.setLayout(javaPaneLayout);
        javaPaneLayout.setHorizontalGroup(
            javaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        javaPaneLayout.setVerticalGroup(
            javaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
        );

        controlToolbar.setRollover(true);

        compileButton.setText("Compile Code");
        compileButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        compileButton.setFocusable(false);
        compileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        compileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        compileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileButtonActionPerformed(evt);
            }
        });
        controlToolbar.add(compileButton);
        controlToolbar.add(jSeparator1);

        runButton.setText("Run Code");
        runButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        runButton.setFocusable(false);
        runButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        runButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        controlToolbar.add(runButton);

        consoleOutputPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Console Output"));

        consoleOutput.setEditable(false);
        consoleOutput.setColumns(20);
        consoleOutput.setRows(5);
        consoleOutput.setFocusable(false);
        consoleOutput.setRequestFocusEnabled(false);
        jScrollPane2.setViewportView(consoleOutput);

        javax.swing.GroupLayout consoleOutputPaneLayout = new javax.swing.GroupLayout(consoleOutputPane);
        consoleOutputPane.setLayout(consoleOutputPaneLayout);
        consoleOutputPaneLayout.setHorizontalGroup(
            consoleOutputPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consoleOutputPaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        consoleOutputPaneLayout.setVerticalGroup(
            consoleOutputPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consoleOutputPaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        consoleInputPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Console Input"));

        consoleInput.setText("Console Input (To Be Implemented)");

        javax.swing.GroupLayout consoleInputPaneLayout = new javax.swing.GroupLayout(consoleInputPane);
        consoleInputPane.setLayout(consoleInputPaneLayout);
        consoleInputPaneLayout.setHorizontalGroup(
            consoleInputPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(consoleInput, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );
        consoleInputPaneLayout.setVerticalGroup(
            consoleInputPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(consoleInput)
        );

        jFile.setText("File");
        jMenuBar1.add(jFile);

        jEdit.setText("Edit");
        jMenuBar1.add(jEdit);

        jHelp.setText("Help");
        jMenuBar1.add(jHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(consoleOutputPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workspacePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(javaPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(controlToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(consoleInputPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(javaPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(workspacePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(consoleOutputPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(controlToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(consoleInputPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void compileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileButtonActionPerformed
        // TODO add your handling code here:
        setOuputStreams();
        se.saveSession(javaOutput);
        String path = se.getCurrentFilePath();
        
        try {   //clean these up into a compile and run function, input params are strings directory and name
            System.out.println("********");
            runProcess("javac \"" + se.getCurrentFilePath() + "\"");
            System.out.println("********");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_compileButtonActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        // TODO add your handling code here:
        setOuputStreams();
        try {
            System.out.println("********");
            System.out.println("Running: java -cp " + se.getCodeDir() + " Session");
            runProcess("java -cp \"" + se.getCodeDir() + "\" Session" );
            System.out.println("********");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_runButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }
    
    private static void printLines(String cmd, InputStream ins) throws Exception {
        String line = null;
        BufferedReader in = new BufferedReader(
            new InputStreamReader(ins));
        while ((line = in.readLine()) != null) {
            System.out.println(cmd + " " + line);
        }
      }

      private static void runProcess(String command) throws Exception {
        Process pro = Runtime.getRuntime().exec(command);
        printLines("stdout:", pro.getInputStream());
        printLines("stderr:", pro.getErrorStream());
        pro.waitFor();
        System.out.println("exitValue() " + pro.exitValue());
      }
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private pack.AddBlock addBlock1;
    private pack.BoolBlock boolBlock1;
    private pack.CharBlock charBlock1;
    private javax.swing.JButton compileButton;
    private javax.swing.JTextField consoleInput;
    private javax.swing.JPanel consoleInputPane;
    private javax.swing.JTextArea consoleOutput;
    private javax.swing.JPanel consoleOutputPane;
    private javax.swing.JToolBar controlToolbar;
    private pack.DivideBlock divideBlock1;
    private pack.EqualBlock equalBlock1;
    private pack.GreaterThanBlock greaterThanBlock1;
    private pack.IntBlock intBlock1;
    private javax.swing.JMenu jEdit;
    private javax.swing.JMenu jFile;
    private javax.swing.JMenu jHelp;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JTextArea javaOutput;
    private javax.swing.JPanel javaPane;
    private pack.LessThanBlock lessThanBlock1;
    private pack.ModBlock modBlock1;
    private pack.MultiplyBlock multiplyBlock1;
    private pack.NotEqualBlock notEqualBlock1;
    private javax.swing.JButton runButton;
    private pack.StringBlock stringBlock1;
    private pack.SubtractBlock subtractBlock1;
    private javax.swing.JPanel workspacePane;
    // End of variables declaration//GEN-END:variables
}